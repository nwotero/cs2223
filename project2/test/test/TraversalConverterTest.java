package test;


import static org.junit.Assert.assertArrayEquals;

import org.junit.Test;

import project2.TraversalConverter;
import junit.framework.TestCase;

/**
 * The class <code>TraversalConverterTest</code> contains tests for the class
 * {@link <code>TraversalConverter</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 11/23/14 7:48 PM
 *
 * @author Donald
 *
 * @version $Revision$
 */
public class TraversalConverterTest extends TestCase {
	
	/**
	 * Run the String[] search_pre_to_post(String[]) method test
	 */
	
	@Test
	public void testSearch_pre_to_post_right() {
		String[] pre = {"a","b","c","d","e"};
		String[] post = {"e","d","c","b","a"};
		String[] test = TraversalConverter.search_pre_to_post(pre);
		assertArrayEquals(post, test);
	}
	
	@Test
	public void testSearch_pre_to_post_left() {
		String[] pre = {"e","d","c", "b","a"};
		String[] post = {"a","b","c","d","e"};
		assertArrayEquals(post, TraversalConverter.search_pre_to_post(pre));
	}

	@Test(expected=Exception.class)
	public void testSearch_pre_to_post_invalid_throws(){
		String[] pre = {"bb","cc","dd","aa"};
		TraversalConverter.search_pre_to_post(pre);
	}
	
	@Test
	public void testSearch_pre_to_post_letters() {
		String[] pre = {"d","b","a", "c","e","f"};
		String[] post = {"a","c","b","f","e","d"};
		String[] test = TraversalConverter.search_pre_to_post(pre);
		assertArrayEquals(post, test);
	}
	
	@Test
	public void test_pre_post_to_in() {
		String[] pre = {"a","b","c"};
		String[] post = {"b","c","a"};
		String[] in = {"b", "a", "c"};
		String[] test = TraversalConverter.pre_post_to_in(pre, post);
		assertArrayEquals(in, test);
	}
	
	@Test
	public void test_pre_in_to_post_nominal() {
		System.out.println("Test test_pre_in_to_post_nominal");
		String[] pre = {"6", "2", "1", "4", "8", "7", "9"};
		String[] in = {"1", "2", "4", "6", "7", "8", "9"};
		String[] post = {"1", "4", "2", "7", "9", "8", "6"};
		String[] test = TraversalConverter.pre_in_to_post(pre, in);
		
		assertArrayEquals(post, test);
	}
	
	@Test
	public void test_pre_in_to_post_nominal_letters() {
		System.out.println("Test test_pre_in_to_post_nominal");
		String[] pre = {"f", "b", "a", "d", "h", "g", "i"};
		String[] in = {"a", "b", "d", "f", "g", "h", "i"};
		String[] post = {"a", "d", "b", "g", "i", "h", "f"};
		String[] test = TraversalConverter.pre_in_to_post(pre, in);
		
		assertArrayEquals(post, test);
	}
	
	@Test
	public void test_pre_in_to_post_unbalanced() {
		System.out.println("Test test_pre_in_to_post_unbalanced");
		String[] pre = {"6", "2", "1", "4", "8", "9"};
		String[] in = {"1", "2", "4", "6", "8", "9"};
		String[] post = {};
		String[] test = TraversalConverter.pre_in_to_post(pre, in);
	
		assertArrayEquals(post,test);
	}
	
	@Test
	public void test_pre_in_to_post_unmatching() {
		System.out.println("Test test_pre_in_to_post_unmatching");
		String[] pre = {"6", "2", "1", "4", "8", "7", "9"};
		String[] in = {"1", "8", "4", "6", "7", "2", "9"};
		String[] post = {};
		String[] test = TraversalConverter.pre_in_to_post(pre, in);;
		
		assertArrayEquals(post,test);
	}
	
	@Test
	public void test_pre_post_to_in_nominal() {
		System.out.println("Test test_pre_post_to_in_nominal");
		String[] pre = {"6", "2", "1", "4", "8", "7", "9"};
		String[] post = {"1", "4", "2", "7", "9", "8", "6"};
		String[] in = {"1", "2", "4", "6", "7", "8", "9"};
		String[] test = TraversalConverter.pre_post_to_in(pre, post);
		
		assertArrayEquals(in, test);
	}
	
	@Test
	public void test_pre_post_to_in_unbalanced() {
		System.out.println("Test test_pre_post_to_in_unbalanced");
		String[] pre = {"6", "2", "1", "4", "8", "9"};
		String[] post = {"1", "4", "2", "9", "8", "6"};
		String[] in = {};
		String[] test = TraversalConverter.pre_post_to_in(pre, post);
	
		assertArrayEquals(in,test);
	}
	
	@Test
	public void test_pre_post_to_in_unmatching() {
		System.out.println("Test test_pre_post_to_in_unmatching");
		String[] pre = {"6", "2", "1", "4", "8", "7", "9"};
		String[] post = {"1", "4", "8", "7", "9", "2", "6"};
		String[] in = {};
		String[] test = TraversalConverter.pre_post_to_in(pre, post);
		
		assertArrayEquals(in,test);
	}

}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = false
 * createSetUp = false
 * createTearDown = false
 * createTestFixture = false
 * createTestStubs = false
 * methods = pre_in_to_post([QString;![QString;),pre_post_to_in([QString;![QString;),pre_to_post_recurse([I!I),search_pre_to_post([QString;)
 * package = 
 * package.sourceFolder = project2/tests
 * superclassType = junit.framework.TestCase
 * testCase = TraversalConverterTest
 * testClassType = TraversalConverter
 */